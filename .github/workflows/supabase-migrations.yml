name: Supabase Migrations

on:
  push:
    branches:
      - main
      - feature/supabase-cli-setup # For testing before merge
    paths:
      - 'supabase/migrations/**'
  workflow_dispatch: # Allows manual triggering

jobs:
  deploy-migrations:
    name: Deploy Database Migrations
    runs-on: ubuntu-latest

    # Only run if migrations directory was changed
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Link to Supabase project
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
        run: |
          supabase link --project-ref $PROJECT_ID

      - name: Check migration status (before)
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          echo "📋 Migration status before deployment:"
          supabase migration list

      - name: Push migrations to production
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          echo "🚀 Pushing migrations to production..."
          yarn db:push

      - name: Check migration status (after)
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          echo "✅ Migration status after deployment:"
          supabase migration list

      - name: Generate TypeScript types from production
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          echo "🔧 Generating TypeScript types from production schema..."
          yarn db:types:remote

      - name: Check for type changes
        id: check_types
        run: |
          if git diff --quiet src/lib/database.types.ts; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "ℹ️  No type changes detected"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "📝 Type changes detected"
          fi

      - name: Commit updated types
        if: steps.check_types.outputs.changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add src/lib/database.types.ts
          git commit -m "Update database types from production schema [skip ci]"

      - name: Push type changes
        if: steps.check_types.outputs.changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Summary
        run: |
          echo "## Migration Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Migrations deployed successfully to production" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.check_types.outputs.changed }}" == "true" ]; then
            echo "📝 Database types were updated and committed" >> $GITHUB_STEP_SUMMARY
          else
            echo "ℹ️  No type changes were needed" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Next steps:**" >> $GITHUB_STEP_SUMMARY
          echo "1. Verify changes in [Supabase Dashboard](https://supabase.com/dashboard/project/${{ secrets.SUPABASE_PROJECT_ID }})" >> $GITHUB_STEP_SUMMARY
          echo "2. Test your application at production URL" >> $GITHUB_STEP_SUMMARY
          echo "3. Monitor logs for any migration-related issues" >> $GITHUB_STEP_SUMMARY
