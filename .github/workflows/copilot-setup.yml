name: Setup Environment for GitHub Copilot

on:
  workflow_dispatch: # Allow manual triggering
  push:
    branches: [main]
    paths:
      - '.github/copilot-instructions.md'
      - '.github/instructions/**'
      - '.copilotrc'

jobs:
  setup-copilot-environment:
    name: Setup Development Environment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Create environment file
        run: |
          echo "Creating .env.local for Copilot agents..."
          cat > .env.local << EOF
          # GitHub Actions environment for Copilot agents
          ADMIN_SECRET=${{ secrets.ADMIN_SECRET || 'test_admin_secret_for_development' }}

          # Supabase Configuration (optional - graceful degradation)
          SUPABASE_URL=${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_KEY=${{ secrets.SUPABASE_SERVICE_KEY }}

          # Strava Configuration (optional)
          STRAVA_CLIENT_ID=${{ secrets.STRAVA_CLIENT_ID }}
          STRAVA_CLIENT_SECRET=${{ secrets.STRAVA_CLIENT_SECRET }}
          STRAVA_REFRESH_TOKEN=${{ secrets.STRAVA_REFRESH_TOKEN }}
          EOF

      - name: Validate Copilot configuration
        run: |
          echo "📋 Validating GitHub Copilot configuration..."

          # Check required configuration files
          if [ -f ".github/copilot-instructions.md" ]; then
            echo "✅ Main Copilot instructions found"
          else
            echo "❌ Missing .github/copilot-instructions.md"
            exit 1
          fi

          if [ -f ".copilotrc" ]; then
            echo "✅ .copilotrc configuration found"
          else
            echo "❌ Missing .copilotrc"
            exit 1
          fi

          if [ -d ".github/instructions" ]; then
            echo "✅ Path-specific instructions directory found"
            echo "📁 Instruction files:"
            find .github/instructions -name "*.instructions.md" | sed 's/^/  - /'
          else
            echo "❌ Missing .github/instructions directory"
            exit 1
          fi

      - name: Run development checks
        run: |
          echo "🔍 Running development environment checks..."

          # Validate translations
          yarn validate:i18n

          # Type check
          yarn astro check

          # Lint check
          yarn lint

          # Format check
          yarn format:check

      - name: Test development server
        run: |
          echo "🚀 Testing development server startup..."

          # Start dev server in background
          yarn dev &
          DEV_PID=$!

          # Wait for server to start
          echo "Waiting for server to start..."
          timeout 60 bash -c 'until curl -s http://localhost:4321 > /dev/null; do sleep 2; done'

          if curl -s http://localhost:4321 > /dev/null; then
            echo "✅ Development server started successfully"
          else
            echo "❌ Development server failed to start"
            exit 1
          fi

          # Stop dev server
          kill $DEV_PID

      - name: Generate setup summary
        run: |
          echo "## GitHub Copilot Setup Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Environment configured successfully for GitHub Copilot agents**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Configuration Files" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ \`.github/copilot-instructions.md\` - Main project instructions" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ \`.copilotrc\` - Project-specific preferences" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ \`.github/instructions/\` - Path-specific instructions" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ \`.github/DEVELOPMENT.md\` - Development guide" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ \`.github/quick-setup.sh\` - Automated setup script" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Environment Variables" >> $GITHUB_STEP_SUMMARY
          SUPABASE_URL="${{ secrets.SUPABASE_URL }}"
          ADMIN_SECRET="${{ secrets.ADMIN_SECRET }}"
          if [ -n "$SUPABASE_URL" ]; then
            echo "- ✅ Supabase configuration available" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ⚠️  Supabase configuration not set (graceful degradation enabled)" >> $GITHUB_STEP_SUMMARY
          fi
          if [ -n "$ADMIN_SECRET" ]; then
            echo "- ✅ Admin secret configured" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ⚠️  Using default admin secret for development" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Quick Start for Agents" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "./.github/quick-setup.sh  # Automated setup" >> $GITHUB_STEP_SUMMARY
          echo "yarn dev                  # Start development server" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
