---
import Layout from '../layouts/Layout.astro';
import { supabase } from '../lib/supabase';
import type { CoffeeLogWithBean } from '../lib/schemas/cafe';
import {
  calculateStats,
  getBrewMethodDistribution,
  getQualityOverTime,
  getMostUsedBeans,
  formatBrewRatio,
} from '../lib/cafe-stats';
import BrewMethodChart from '../components/cafe/BrewMethodChart';
import QualityChart from '../components/cafe/QualityChart';

// Fetch all coffee logs with bean details
let logs: CoffeeLogWithBean[] = [];
let error: string | null = null;

if (!supabase) {
  error = 'Database not configured';
} else {
  try {
    const { data, error: fetchError } = await supabase
      .from('coffee_logs')
      .select('*, bean:coffee_beans(*)')
      .order('brew_time', { ascending: false })
      .limit(100); // Limit to recent 100 logs for performance

    if (fetchError) throw fetchError;
    logs = (data || []) as CoffeeLogWithBean[];
  } catch (e) {
    console.error('Error fetching coffee logs:', e);
    error = 'Failed to load coffee logs';
  }
}

// Calculate statistics
const stats = logs.length > 0 ? calculateStats(logs) : null;
const brewMethodData = logs.length > 0 ? getBrewMethodDistribution(logs) : [];
const qualityData = logs.length > 0 ? getQualityOverTime(logs) : [];
const topBeans = logs.length > 0 ? getMostUsedBeans(logs) : [];
const recentLogs = logs.slice(0, 30); // Show last 30
---

<Layout
  title="Coffee Tracker"
  description="My coffee brewing journey - tracking beans, methods, and quality"
>
  <header class="mb-8">
    <h1 class="text-3xl font-bold mb-2">Coffee Tracker</h1>
    <p class="text-gray-600 dark:text-gray-400">
      Tracking my coffee brewing journey, one cup at a time
    </p>
  </header>

  {
    error ? (
      <section class="bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-6">
        <h2 class="text-xl font-semibold mb-2">Coffee Tracking Not Available</h2>
        <p class="text-gray-700 dark:text-gray-300">
          {error === 'Database not configured'
            ? 'The database is not configured yet. Coffee tracking will be available soon!'
            : error}
        </p>
      </section>
    ) : logs.length === 0 ? (
      <section class="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-6">
        <h2 class="text-xl font-semibold mb-2">No Coffee Logs Yet</h2>
        <p class="text-gray-700 dark:text-gray-300">
          The coffee tracking journey is just beginning. Check back soon for updates!
        </p>
      </section>
    ) : (
      <>
        {/* Stats Cards */}
        <div class="grid grid-cols-1 sm:grid-cols-3 gap-4 mb-8">
          <div class="bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700">
            <div class="text-sm text-gray-600 dark:text-gray-400 mb-1 font-medium">Total Logs</div>
            <div class="text-4xl font-bold text-gray-900 dark:text-gray-100">
              {stats?.totalLogs}
            </div>
          </div>
          <div class="bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700">
            <div class="text-sm text-gray-600 dark:text-gray-400 mb-1 font-medium">This Week</div>
            <div class="text-4xl font-bold text-gray-900 dark:text-gray-100">
              {stats?.logsThisWeek}
            </div>
          </div>
          <div class="bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700">
            <div class="text-sm text-gray-600 dark:text-gray-400 mb-1 font-medium">Avg Rating</div>
            <div class="text-4xl font-bold text-gray-900 dark:text-gray-100">
              {stats?.avgRating} / 5
            </div>
          </div>
        </div>

        {/* Visualizations */}
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
          {/* Brew Method Distribution */}
          <div class="bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700">
            <h2 class="text-xl font-semibold mb-4 text-gray-900 dark:text-gray-100">
              Brew Method Distribution
            </h2>
            <BrewMethodChart client:load data={brewMethodData} />
          </div>

          {/* Quality Over Time */}
          <div class="bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700">
            <h2 class="text-xl font-semibold mb-4 text-gray-900 dark:text-gray-100">
              Quality Over Time (Last 30 Days)
            </h2>
            <QualityChart client:load data={qualityData} />
          </div>
        </div>

        {/* Most Used Beans */}
        {topBeans.length > 0 && (
          <section class="bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700 mb-8">
            <h2 class="text-xl font-semibold mb-4 text-gray-900 dark:text-gray-100">
              Most Used Beans
            </h2>
            <div class="space-y-3">
              {topBeans.map((item) => (
                <div class="flex justify-between items-center">
                  <div>
                    <div class="font-medium">{item.bean.bean_name}</div>
                    {item.bean.roaster && (
                      <div class="text-sm text-gray-600 dark:text-gray-400">
                        {item.bean.roaster}
                      </div>
                    )}
                  </div>
                  <div class="text-sm font-medium text-gray-700 dark:text-gray-300">
                    {item.count} brews
                  </div>
                </div>
              ))}
            </div>
          </section>
        )}

        {/* Recent Logs Table */}
        <section class="bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700">
          <h2 class="text-xl font-semibold mb-4 text-gray-900 dark:text-gray-100">Recent Brews</h2>
          <div class="overflow-x-auto">
            <table class="w-full">
              <thead>
                <tr class="border-b-2 border-gray-300 dark:border-gray-600">
                  <th class="text-left py-3 px-3 font-semibold text-gray-900 dark:text-gray-100">
                    Date
                  </th>
                  <th class="text-left py-3 px-3 font-semibold text-gray-900 dark:text-gray-100">
                    Bean
                  </th>
                  <th class="text-left py-3 px-3 font-semibold text-gray-900 dark:text-gray-100">
                    Method
                  </th>
                  <th class="text-left py-3 px-3 font-semibold text-gray-900 dark:text-gray-100">
                    Ratio
                  </th>
                  <th class="text-left py-3 px-3 font-semibold text-gray-900 dark:text-gray-100">
                    Grind
                  </th>
                  <th class="text-left py-3 px-3 font-semibold text-gray-900 dark:text-gray-100">
                    Rating
                  </th>
                  <th class="text-left py-3 px-3 font-semibold text-gray-900 dark:text-gray-100">
                    Notes
                  </th>
                </tr>
              </thead>
              <tbody>
                {recentLogs.map((log) => (
                  <tr class="border-b border-gray-100 dark:border-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700/50 transition-colors">
                    <td class="py-3 px-3 text-sm text-gray-900 dark:text-gray-100">
                      {new Date(log.brew_time).toLocaleDateString('en-US', {
                        month: 'short',
                        day: 'numeric',
                      })}
                    </td>
                    <td class="py-3 px-3 text-sm text-gray-900 dark:text-gray-100">
                      {log.bean?.bean_name || (
                        <span class="text-gray-500 dark:text-gray-400">Unknown</span>
                      )}
                    </td>
                    <td class="py-3 px-3 text-sm text-gray-900 dark:text-gray-100">
                      {log.brew_method}
                    </td>
                    <td class="py-3 px-3 text-sm font-mono text-gray-900 dark:text-gray-100">
                      {formatBrewRatio(log.dose_grams, log.yield_grams)}
                    </td>
                    <td class="py-3 px-3 text-sm text-gray-900 dark:text-gray-100">
                      {log.grind_setting}
                    </td>
                    <td class="py-3 px-3 text-sm text-gray-900 dark:text-gray-100">
                      {log.quality_rating} / 5
                    </td>
                    <td class="py-3 px-3 text-sm text-gray-600 dark:text-gray-400 max-w-xs truncate">
                      {log.notes || '-'}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </section>
      </>
    )
  }
</Layout>

<style>
  /* Responsive table */
  @media (max-width: 768px) {
    table {
      font-size: 0.875rem;
    }
    th,
    td {
      padding: 0.5rem 0.25rem;
    }
  }
</style>
