---
import Layout from '../../layouts/Layout.astro';
import { supabase } from '../../lib/supabase';

export const prerender = false;

// Simple auth check
const adminSecret = import.meta.env.ADMIN_SECRET;
const cookies = Astro.cookies;
const isAuthed = cookies.get('admin_auth')?.value === adminSecret;

if (!isAuthed) {
  return Astro.redirect('/admin');
}

let message = '';
let beans = null;

// Handle form submission
if (Astro.request.method === 'POST') {
  try {
    const formData = await Astro.request.formData();
    const action = formData.get('action');
    
    if (action === 'add_bean') {
      const { error } = await supabase
        .from('beans')
        .insert({
          name: formData.get('bean_name'),
          roaster: formData.get('roaster'),
          origin: formData.get('origin'),
          roast_date: formData.get('roast_date') || null,
          notes: formData.get('bean_notes')
        });
      
      if (error) throw error;
      message = 'Bean added successfully!';
    } else if (action === 'add_coffee') {
      const { error } = await supabase
        .from('coffees')
        .insert({
          bean_id: formData.get('bean_id'),
          brew_date: formData.get('brew_date'),
          brew_method: formData.get('brew_method'),
          coffee_grams: parseFloat(formData.get('coffee_grams') as string) || null,
          water_grams: parseFloat(formData.get('water_grams') as string) || null,
          rating: parseInt(formData.get('rating') as string) || null,
          notes: formData.get('coffee_notes')
        });
      
      if (error) throw error;
      message = 'Coffee entry added successfully!';
    }
  } catch (error) {
    message = `Error: ${error instanceof Error ? error.message : 'Unknown error'}`;
  }
}

// Fetch beans for the dropdown
try {
  const { data } = await supabase
    .from('beans')
    .select('*')
    .order('name');
  beans = data;
} catch (error) {
  console.warn('Could not fetch beans:', error);
}
---

<Layout title="Coffee Management">
  <nav>
    <a href="/admin">‚Üê Back to Dashboard</a>
  </nav>
  
  <h1>Coffee Management</h1>
  
  {message && (
    <div style={`padding: 1rem; margin: 1rem 0; background: ${message.includes('Error') ? '#fee' : '#efe'}; border-radius: 4px;`}>
      {message}
    </div>
  )}

  <div class="grid">
    <section>
      <h2>Add New Bean</h2>
      <form method="POST">
        <input type="hidden" name="action" value="add_bean">
        <fieldset>
          <label for="bean_name">Bean Name *</label>
          <input type="text" name="bean_name" id="bean_name" required>
          
          <label for="roaster">Roaster</label>
          <input type="text" name="roaster" id="roaster">
          
          <label for="origin">Origin</label>
          <input type="text" name="origin" id="origin">
          
          <label for="roast_date">Roast Date</label>
          <input type="date" name="roast_date" id="roast_date">
          
          <label for="bean_notes">Notes</label>
          <textarea name="bean_notes" id="bean_notes" rows="3"></textarea>
          
          <button type="submit">Add Bean</button>
        </fieldset>
      </form>
    </section>

    <section>
      <h2>Add Coffee Entry</h2>
      <form method="POST">
        <input type="hidden" name="action" value="add_coffee">
        <fieldset>
          <label for="bean_id">Bean *</label>
          <select name="bean_id" id="bean_id" required>
            <option value="">Select a bean...</option>
            {beans && beans.map(bean => (
              <option value={bean.id}>{bean.name} {bean.roaster && `(${bean.roaster})`}</option>
            ))}
          </select>
          
          <label for="brew_date">Brew Date *</label>
          <input type="date" name="brew_date" id="brew_date" value={new Date().toISOString().split('T')[0]} required>
          
          <label for="brew_method">Brew Method</label>
          <select name="brew_method" id="brew_method">
            <option value="">Select method...</option>
            <option value="V60">V60</option>
            <option value="Chemex">Chemex</option>
            <option value="French Press">French Press</option>
            <option value="Espresso">Espresso</option>
            <option value="Aeropress">Aeropress</option>
            <option value="Drip">Drip</option>
          </select>
          
          <div class="grid">
            <div>
              <label for="coffee_grams">Coffee (grams)</label>
              <input type="number" name="coffee_grams" id="coffee_grams" step="0.1">
            </div>
            <div>
              <label for="water_grams">Water (grams)</label>
              <input type="number" name="water_grams" id="water_grams" step="0.1">
            </div>
          </div>
          
          <label for="rating">Rating (1-10)</label>
          <input type="number" name="rating" id="rating" min="1" max="10">
          
          <label for="coffee_notes">Notes</label>
          <textarea name="coffee_notes" id="coffee_notes" rows="3"></textarea>
          
          <button type="submit">Add Coffee Entry</button>
        </fieldset>
      </form>
    </section>
  </div>
</Layout>